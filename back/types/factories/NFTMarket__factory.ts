/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTMarket, NFTMarketInterface } from "../NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNfts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611987806100746000396000f3fe6080604052600436106100555760003560e01c80630f08efe01461005a578063128ae7121461008557806312e85585146100b057806358eb2df5146100db578063c23b139e146100f7578063f064c32e14610113575b600080fd5b34801561006657600080fd5b5061006f61013e565b60405161007c919061168a565b60405180910390f35b34801561009157600080fd5b5061009a610469565b6040516100a7919061168a565b60405180910390f35b3480156100bc57600080fd5b506100c5610817565b6040516100d2919061172c565b60405180910390f35b6100f560048036038101906100f091906112f7565b610821565b005b610111600480360381019061010c91906112bb565b610b85565b005b34801561011f57600080fd5b50610128610e3e565b604051610135919061168a565b60405180910390f35b6060600061014c60016111ec565b9050600061015a60026111ec565b61016460016111ec565b61016e91906117e7565b90506000808267ffffffffffffffff8111156101b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101ec57816020015b6101d9611210565b8152602001906001900390816101d15790505b50905060005b8481101561045e57600073ffffffffffffffffffffffffffffffffffffffff16600560006001846102239190611791565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561044b576000600560006001846102849190611791565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061042f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508480610445906118ab565b95505050505b8080610456906118ab565b9150506101f2565b508094505050505090565b6060600061047760016111ec565b905060008060005b8381101561051f573373ffffffffffffffffffffffffffffffffffffffff16600560006001846104af9190611791565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561050c578280610508906118ab565b9350505b8080610517906118ab565b91505061047f565b5060008267ffffffffffffffff811115610562577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561059b57816020015b610588611210565b8152602001906001900390816105805790505b50905060005b8381101561080c573373ffffffffffffffffffffffffffffffffffffffff16600560006001846105d19190611791565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107f9576000600560006001846106329190611791565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106107dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525084806107f3906118ab565b95505050505b8080610804906118ab565b9150506105a1565b508094505050505090565b6000600454905090565b60026000541415610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e9061170c565b60405180910390fd5b6002600081905550600081116108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a9906116ac565b60405180910390fd5b60045434146108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed906116ec565b60405180910390fd5b61090060016111fa565b600061090c60016111ec565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610aed93929190611653565b600060405180830381600087803b158015610b0757600080fd5b505af1158015610b1b573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827f045dfa01dcba2b36aba1d3dc4a874f4b0c5d2fbeb8d2c4b34a7d88c8d8f929d1336000876000604051610b6f949392919061160e565b60405180910390a4506001600081905550505050565b60026000541415610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc29061170c565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c42906116cc565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610cc7573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610d0593929190611653565b600060405180830381600087803b158015610d1f57600080fd5b505af1158015610d33573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610dc560026111fa565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610e2f573d6000803e3d6000fd5b50505060016000819055505050565b60606000610e4c60016111ec565b905060008060005b83811015610ef4573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610e849190611791565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ee1578280610edd906118ab565b9350505b8080610eec906118ab565b915050610e54565b5060008267ffffffffffffffff811115610f37577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f7057816020015b610f5d611210565b815260200190600190039081610f555790505b50905060005b838110156111e1573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610fa69190611791565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111ce576000600560006001846110079190611791565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106111b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525084806111c8906118ab565b95505050505b80806111d9906118ab565b915050610f76565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b6000813590506112a081611923565b92915050565b6000813590506112b58161193a565b92915050565b600080604083850312156112ce57600080fd5b60006112dc85828601611291565b92505060206112ed858286016112a6565b9150509250929050565b60008060006060848603121561130c57600080fd5b600061131a86828701611291565b935050602061132b868287016112a6565b925050604061133c868287016112a6565b9150509250925092565b60006113528383611562565b60e08301905092915050565b61136781611875565b82525050565b6113768161182d565b82525050565b6113858161181b565b82525050565b6113948161181b565b82525050565b60006113a582611757565b6113af818561176f565b93506113ba83611747565b8060005b838110156113eb5781516113d28882611346565b97506113dd83611762565b9250506001810190506113be565b5085935050505092915050565b6114018161183f565b82525050565b6114108161183f565b82525050565b6000611423601b83611780565b91507f5072696365206d7573742062652061746c6561737420312077656900000000006000830152602082019050919050565b6000611463604083611780565b91507f506c65617365207375626d6974207468652061736b696e67207072696365206960008301527f6e206f7264657220746f20636f6d706c657465207468652070757263686173656020830152604082019050919050565b60006114c9602483611780565b91507f5072696365206d75737420626520657175616c20746f206c697374696e67205060008301527f72696365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061152f601f83611780565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b60e08201600082015161157860008501826115f0565b50602082015161158b602085018261137c565b50604082015161159e60408501826115f0565b5060608201516115b1606085018261136d565b5060808201516115c4608085018261136d565b5060a08201516115d760a08501826115f0565b5060c08201516115ea60c08501826113f8565b50505050565b6115f98161186b565b82525050565b6116088161186b565b82525050565b6000608082019050611623600083018761135e565b611630602083018661135e565b61163d60408301856115ff565b61164a6060830184611407565b95945050505050565b6000606082019050611668600083018661138b565b611675602083018561138b565b61168260408301846115ff565b949350505050565b600060208201905081810360008301526116a4818461139a565b905092915050565b600060208201905081810360008301526116c581611416565b9050919050565b600060208201905081810360008301526116e581611456565b9050919050565b60006020820190508181036000830152611705816114bc565b9050919050565b6000602082019050818103600083015261172581611522565b9050919050565b600060208201905061174160008301846115ff565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061179c8261186b565b91506117a78361186b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117dc576117db6118f4565b5b828201905092915050565b60006117f28261186b565b91506117fd8361186b565b9250828210156118105761180f6118f4565b5b828203905092915050565b60006118268261184b565b9050919050565b60006118388261184b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061188082611887565b9050919050565b600061189282611899565b9050919050565b60006118a48261184b565b9050919050565b60006118b68261186b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118e9576118e86118f4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61192c8161181b565b811461193757600080fd5b50565b6119438161186b565b811461194e57600080fd5b5056fea264697066735822122086f533faac83f5cc37682f64f2f536654c711a2dd7624a92d5db1be4d165d05364736f6c63430008000033";

export class NFTMarket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
